plugins {
    id 'java'
    id 'maven-publish'
    id "checkstyle"
    id "jacoco"
}

group = 'com.github.growthbook'
version = '0.1.0'

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
    flatDir {
        dirs("/Users/mc/GrowthBook/workspace/growthbook-sdk-java/lib/build/libs")
    }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    implementation 'dev.openfeature:sdk:[1.12.2,2.0.0)'
    implementation 'com.google.code.gson:gson:2.9.1'
    //implementation 'com.github.growthbook:growthbook-sdk-java:main-SNAPSHOT'
    //implementation fileTree(dir: '/Users/mc/GrowthBook/workspace/growthbook-sdk-java/lib/build/libs', includes: ['*.jar'])
    implementation(":lib-main-SNAPSHOT:")


    // Test dependencies - Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'org.mockito:mockito-core:5.3.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'
    //testImplementation 'org.mockito:mockito-inline:5.3.1'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    dependsOn 'cleanTest'
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

checkstyle {
    toolVersion = "9.3"
    configFile file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    checkstyleTest.enabled = false
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}